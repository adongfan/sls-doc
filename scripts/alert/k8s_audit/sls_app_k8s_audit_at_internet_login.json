{
  "description": "每分钟检查一次，查询过去2分钟的日志。当存在公网登录事件时，告警触发。",
  "alert": {
    "name": "sls_app_k8s_audit_at_internet_login",
    "displayName": "Kubernetes 公网登录告警",
    "type": "Alert",
    "state": "Enabled",
    "schedule": {
      "type": "FixedRate",
      "interval": "1m"
    },
    "configuration": {
      "version": "2.0",
      "type": "default",
      "dashboard": "internal-alert-analysis",
      "queryList": [
        {
          "storeType": "log",
          "project": "{{default.project}}",
          "store": "{{default.logstore}}",
          "query": "* | select count(DISTINCT ip) as ip_count, sum(total) as total, sum(failCount) as failCount from (select CASE WHEN json_array_length(sourceIPs) = 1 then json_format(json_array_get(sourceIPs, 0)) ELSE  sourceIPs END  as ip, count(1) as total,  sum(CASE WHEN \"responseStatus.code\" < 400 then 0   ELSE 1 END) * 1.0 / count(1) as fail_rate,  count_if(\"responseStatus.code\" > 399) as failCount from log WHERE ip_to_domain(json_format(json_array_get(sourceIPs, 0))) = 'internet' group by ip ORDER BY total desc limit 10000)",
          "timeSpanType": "Relative",
          "start": "-120s",
          "end": "now"
        }
      ],
      "groupConfiguration": {
        "type": "no_group"
      },
      "joinConfigurations": [],
      "severityConfigurations": [
        {
          "severity": 6,
          "evalCondition": {
            "condition": "total > 0",
            "countCondition": ""
          }
        }
      ],
      "labels": [],
      "annotations": [
        {
          "key": "desc",
          "value": "登录的公网IP数：${ip_count}, 总登录次数 ${total}, 失败次数: ${failCount}。"
        },
        {
          "key": "title",
          "value": "Kubernetes 公网登录告警"
        },
        {
          "key": "__drill_down_query__",
          "value": "*|select CASE WHEN json_array_length(sourceIPs) = 1 then json_format(json_array_get(sourceIPs, 0)) ELSE  sourceIPs END  as ip, count(1) as total,  sum(CASE WHEN \"responseStatus.code\" < 400 then 0   ELSE 1 END) * 1.0 / count(1) as fail_rate,  count_if(\"responseStatus.code\" > 399) as failCount from log WHERE ip_to_domain(json_format(json_array_get(sourceIPs, 0))) = 'internet' group by ip ORDER BY total desc limit 10000"
        },
        {
          "key": "cluster_id",
          "value": "{{cluster_id}}"
        }
      ],
      "autoAnnotation": true,
      "sendResolved": false,
      "threshold": 1,
      "noDataFire": false,
      "noDataSeverity": 6
    }
  }
}